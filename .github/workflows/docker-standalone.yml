# Tencent is pleased to support the open source community by making Polaris available.
#
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
#
# Licensed under the BSD 3-Clause License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://opensource.org/licenses/BSD-3-Clause
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

name: Standalone(Docker)

on:
  workflow_dispatch:
    inputs:
      server_version:
        description: "tag version for polaris"
        required: true
      console_version:
        description: "tag version for polaris-console"
        required: true
      limiter_version:
        description: "tag version for polaris-limiter"
        required: true

jobs:
  release:
    name: Release polaris standalone docker-image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.server_version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          config-inline: |
            insecure-entitlements = [ "network.host" ]

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.POLARIS_DOCKER_NAME }}
          password: ${{ secrets.POLARIS_DOCKER_PASSWORD }}

      - name: Build
        id: build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          SERVER_VERSION: ${{ github.event.inputs.server_version }}
          CONSOLE_VERSION: ${{ github.event.inputs.console_version }}
          LIMITER_VERSION: ${{ github.event.inputs.limiter_version }}
        run: |
          set -e
          workdir=$(pwd)
          cd ${workdir}
          export WORKDIR=${workdir}
          bash release/standalone/build_standalone_docker.sh
